name: Build
on: push
  # push:
  #   branches: [ master ]


jobs:
  build-base-node-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build base node image
        run: docker build -f ./Dockerfile-node-base -t ghcr.io/${{ github.repository_owner }}/pipelinr-clients-node-base:latest .
      - name: Push base image
        run: docker push ghcr.io/${{ github.repository_owner }}/pipelinr-clients-node-base:latest

  build-base-golang-image:
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build base golang image
        run: docker build -f ./Dockerfile-go-base -t ghcr.io/${{ github.repository_owner }}/pipelinr-clients-go-base:latest .
      - name: Push base image
        run: docker push ghcr.io/${{ github.repository_owner }}/pipelinr-clients-go-base:latest
  build:
    strategy:
      matrix:
        # server: [grpc, http]
        # server: [http-server, db]
        server: [go-push, go-nodes, go-route, node-push, node-nodes, node-route]
    # if: github.ref == 'refs/heads/master'
    needs:
      - build-base-golang-image
      - build-base-node-image
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull and retag base images
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/pipelinr-clients-go-base:latest
          docker tag ghcr.io/${{ github.repository_owner }}/pipelinr-clients-go-base:latest pipelinr-clients-go-base:latest
          docker pull ghcr.io/${{ github.repository_owner }}/pipelinr-clients-node-base:latest
          docker tag ghcr.io/${{ github.repository_owner }}/pipelinr-clients-node-base:latest pipelinr-clients-node-base:latest
      -
        name: Build and push service image
        run: |
          docker build -f ./Dockerfile-${{ matrix.server }} -t ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ github.sha }}
      -
        name: Tag and push image for master
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:latest
      -
        name: Set image tag from branch
        id: imagetag
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo ::set-output name=tag::$(echo $(echo ${{ github.ref }} | cut -c12-10000) | sed "s/\//-/g")
      -
        name: Tag and push feature branch
        if: ${{ github.ref != 'refs/heads/main' }}
        env:
          TAGNAME: "${{ steps.imagetag.outputs.tag }}"
        run: |
          env
          docker tag ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ env.TAGNAME }}
          docker push ghcr.io/${{ github.repository_owner }}/pipelinr-clients-${{ matrix.server }}:${{ env.TAGNAME }}
